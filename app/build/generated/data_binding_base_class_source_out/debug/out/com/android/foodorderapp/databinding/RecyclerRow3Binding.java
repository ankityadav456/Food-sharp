// Generated by view binder compiler. Do not edit!
package com.android.foodorderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.foodorderapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerRow3Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView materialCardView;

  @NonNull
  public final TextView restaurantName3;

  @NonNull
  public final ImageView thumbImage3;

  private RecyclerRow3Binding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView materialCardView, @NonNull TextView restaurantName3,
      @NonNull ImageView thumbImage3) {
    this.rootView = rootView;
    this.materialCardView = materialCardView;
    this.restaurantName3 = restaurantName3;
    this.thumbImage3 = thumbImage3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerRow3Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerRow3Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_row3, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerRow3Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.materialCardView;
      MaterialCardView materialCardView = ViewBindings.findChildViewById(rootView, id);
      if (materialCardView == null) {
        break missingId;
      }

      id = R.id.restaurantName3;
      TextView restaurantName3 = ViewBindings.findChildViewById(rootView, id);
      if (restaurantName3 == null) {
        break missingId;
      }

      id = R.id.thumbImage3;
      ImageView thumbImage3 = ViewBindings.findChildViewById(rootView, id);
      if (thumbImage3 == null) {
        break missingId;
      }

      return new RecyclerRow3Binding((ConstraintLayout) rootView, materialCardView, restaurantName3,
          thumbImage3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
