// Generated by view binder compiler. Do not edit!
package com.android.foodorderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.foodorderapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlaceOrderRecyclerRowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final TextView menuNameIDS;

  @NonNull
  public final TextView menuPriceID;

  @NonNull
  public final TextView menuQty;

  @NonNull
  public final ImageView thumbImage;

  private PlaceOrderRecyclerRowBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout linearLayout6, @NonNull TextView menuNameIDS,
      @NonNull TextView menuPriceID, @NonNull TextView menuQty, @NonNull ImageView thumbImage) {
    this.rootView = rootView;
    this.linearLayout6 = linearLayout6;
    this.menuNameIDS = menuNameIDS;
    this.menuPriceID = menuPriceID;
    this.menuQty = menuQty;
    this.thumbImage = thumbImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlaceOrderRecyclerRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlaceOrderRecyclerRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.place_order_recycler_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlaceOrderRecyclerRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.menuNameIDS;
      TextView menuNameIDS = ViewBindings.findChildViewById(rootView, id);
      if (menuNameIDS == null) {
        break missingId;
      }

      id = R.id.menuPriceID;
      TextView menuPriceID = ViewBindings.findChildViewById(rootView, id);
      if (menuPriceID == null) {
        break missingId;
      }

      id = R.id.menuQty;
      TextView menuQty = ViewBindings.findChildViewById(rootView, id);
      if (menuQty == null) {
        break missingId;
      }

      id = R.id.thumbImage;
      ImageView thumbImage = ViewBindings.findChildViewById(rootView, id);
      if (thumbImage == null) {
        break missingId;
      }

      return new PlaceOrderRecyclerRowBinding((ConstraintLayout) rootView, linearLayout6,
          menuNameIDS, menuPriceID, menuQty, thumbImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
